-- 관리자 테이블 
CREATE TABLE Admin (
    no INT AUTO_INCREMENT PRIMARY KEY, -- 관리자의 고유 식별자입니다.
    password VARCHAR(20) NOT NULL, -- 관리자의 비밀번호입니다.
   admin_email VARCHAR(320) UNIQUE -- 관리자의 이메일 주소입니다.
); 

-- 환자 등록 테이블
CREATE TABLE PatientRegistrations (
    no INT AUTO_INCREMENT PRIMARY KEY, -- 환자의 고유 식별자입니다.
    name VARCHAR(50), -- 환자의 이름입니다.
    securityNum CHAR(14) UNIQUE, -- 주민등록번호입니다.
    gender CHAR(1), -- 성별 ('M' 또는 'F').
    address VARCHAR(255), -- 주소입니다
    phone VARCHAR(20), -- 전화번호입니다.
    email VARCHAR(50), -- 이메일 주소입니다.
    bloodType CHAR(6), -- 혈액형입니다.
    height FLOAT, -- 키(센티미터)입니다.
    weight FLOAT, -- 체중(킬로그램)입니다.
    allergies TEXT, -- 알레르기 정보입니다.
    bloodPressure VARCHAR(10), -- 혈압
    temperature DECIMAL(4, 1), -- 체온
    smokingStatus CHAR(1) -- 흡연 여부 ('Y' 또는 'N').
);

-- 환자내원 테이블
CREATE TABLE PatientVisits (
    visitId INT AUTO_INCREMENT PRIMARY KEY, -- 내원 기록의 고유 식별자입니다.
    visitDate DATE, -- 내원 날짜입니다.
    visitTime TIME, -- 진료 시각입니다.
    patientName VARCHAR(50), -- 환자의 이름입니다.
    securityNum VARCHAR(14), -- 환자의 주민등록번호입니다. (RegisterPatients 테이블의 securityNum과 연결 가능)
    visitReason TEXT, -- 내원 사유입니다.
    doctorName VARCHAR(50), -- 담당 의사의 이름입니다.
    nurseName VARCHAR(50), -- 담당 간호사의 이름입니다.
    visitHistory TEXT, -- 내원 이력입니다. ex) 2024-08-19 19:48 피부염(담당의(없으면 없음), 담당간호사(없으면 없음))
    FOREIGN KEY (securityNum) REFERENCES PatientRegistrations(securityNum) -- RegisterPatients 테이블과의 외래키 관계
);

-- 의사 테이블
CREATE TABLE Doctor (
    no INT AUTO_INCREMENT PRIMARY KEY, -- 의사의 고유 식별자입니다.
    name VARCHAR(100), -- 의사의 이름입니다.
    security_num CHAR(14) UNIQUE, -- 주민등록번호입니다.
    email VARCHAR(100) UNIQUE, -- 이메일 주소입니다.
    phone VARCHAR(20), -- 전화번호입니다.
    license_id CHAR(8) UNIQUE, -- 고유 식별자로 사용할 8자리 ID
    password VARCHAR(15), -- (초기에는 NULL)
    position VARCHAR(20), -- 직급 입니다.( 퇴사 처리도 여기서 가능 )
    department_id VARCHAR(10), -- 소속 진료과입니다.
    profile_image VARCHAR(255), -- 증명사진 경로입니다.
    active_status VARCHAR(50) NOT NULL -- 현재 활동 상태 > 진료 중 / 점심 시간 / 자리 비움
);



-- 간호사 테이블
CREATE TABLE Nurse (
    no INT AUTO_INCREMENT PRIMARY KEY, -- 간호사의 고유 식별자입니다.
    name VARCHAR(100), -- 간호사의 이름입니다.
    security_num CHAR(14) UNIQUE, -- 주민등록번호입니다.
    email VARCHAR(320) UNIQUE, -- 이메일 주소입니다.
    phone VARCHAR(20), -- 전화번호입니다.
    license_id CHAR(16) UNIQUE, -- 고유 식별자로 사용할 8자리 ID
    password VARCHAR(15), -- (초기에는 NULL)
    position VARCHAR(20), -- 직급 입니다.( 퇴사 처리도 여기서 가능 )
    profile_image VARCHAR(255), -- 증명사진 경로입니다.
    active_status VARCHAR(50) NOT NULL -- 현재 활동 상태
);

-- 진료 기록(환자의 진료기록 저장) 
CREATE TABLE MedicalRecord (
    chart_num INT AUTO_INCREMENT PRIMARY KEY, -- 차트 번호, 프라이머리 키
    patient_id INT NOT NULL, -- 환자 ID, 환자 테이블의 ID를 참조
    doc_id INT NOT NULL, -- 진료 의사 ID, 의사 테이블의 ID를 참조
    symptoms TEXT, -- 증상
    surgery_status CHAR(1), -- 수술 여부 ('Y' 또는 'N')
    progress TEXT, -- 경과
    visit_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, -- 진료 일자, 타임 스탬프
    FOREIGN KEY (patient_id) REFERENCES PatientRegistrations(no) ON DELETE CASCADE,
    FOREIGN KEY (doc_id) REFERENCES Doctor(no) ON DELETE CASCADE
);

-- 진단 테이블(질병 정보 저장)
CREATE TABLE Diagnosis (
    no INT AUTO_INCREMENT PRIMARY KEY,
    chart_num INT NOT NULL, -- MedicalRecord의 차트 번호 참조
    disease_code VARCHAR(10), -- 질병 코드
    disease_name VARCHAR(255), -- 질병 명칭
    FOREIGN KEY (chart_num) REFERENCES MedicalRecord(chart_num) ON DELETE CASCADE
);

-- 약품 테이블(처방)
CREATE TABLE Prescriptions (
    no INT AUTO_INCREMENT PRIMARY KEY,        -- 고유 번호 (프라이머리 키)
    chart_num INT NOT NULL,                   -- MedicalRecord의 차트 번호 참조 (외래 키)
    entpName VARCHAR(255),           -- 약품 회사
    itemSeq VARCHAR(100),            -- 코드
    itemName VARCHAR(100),           -- 약품명
    useMethodQesitm TEXT,             -- 복용방법
    FOREIGN KEY (chart_num) REFERENCES MedicalRecord(chart_num) ON DELETE CASCADE
);

-- 약물 테이블(약물 정보 저장)
CREATE TABLE Drugs (
    no INT AUTO_INCREMENT PRIMARY KEY,
    chart_num INT NOT NULL, -- MedicalRecord의 차트 번호 참조
    cpntCd VARCHAR(100), -- 성분코드 (CPNT_CD)
    ingdNameKor VARCHAR(200), -- 성분명(한글) (DRUG_CPNT_KOR_NM)
    fomlNm VARCHAR(30), -- 제형명 (FOML_NM)
    dosageRouteCode VARCHAR(50), -- 투여경로 (DOSAGE_ROUTE_CODE)
    dayMaxDosgQyUnit VARCHAR(50), -- 투여 단위 (DAY_MAX_DOSG_QY_UNIT)
    dayMaxDosgQy VARCHAR(20) , -- 1일 최대 투여량 (DAY_MAX_DOSG_QY)
    FOREIGN KEY (chart_num) REFERENCES MedicalRecord(chart_num) ON DELETE CASCADE
);


-- 환자 의사 간호사 테이블 (수간호사가 담당 의사, 간호사 배정)
CREATE TABLE Patient_Assignment (
    no INT AUTO_INCREMENT PRIMARY KEY,
    patient_id INT NOT NULL,
    doctor_id INT, -- 담당 의사의 식별자입니다.
    nurse_id INT, -- 담당 간호사의 식별자입니다.
    assignment_date DATE NOT NULL, -- 담당 지정 날짜입니다.
    FOREIGN KEY (patient_id) REFERENCES PatientRegistrations(no) ON DELETE CASCADE,
    FOREIGN KEY (doctor_id) REFERENCES Doctor(no) ON DELETE SET NULL,
    FOREIGN KEY (nurse_id) REFERENCES Nurse(no) ON DELETE SET NULL
);

-- 의사 환자 관계 테이블
CREATE TABLE Patient_Doctor (
    no INT AUTO_INCREMENT PRIMARY KEY,
    patient_id INT NOT NULL, -- 관리받는 환자의 식별자입니다.
    doctor_id INT NOT NULL, -- 담당 의사의 내부 ID입니다.
    relationship_start_date DATE, -- 관리 시작 날짜입니다.
    relationship_end_date DATE, -- 관리 종료 날짜입니다.
    FOREIGN KEY (patient_id) REFERENCES PatientRegistrations(no) ON DELETE CASCADE,
    FOREIGN KEY (doctor_id) REFERENCES Doctor(no) ON DELETE CASCADE
);


-- 간호사 환자 관계 테이블
CREATE TABLE Patient_Nurse (
    no INT AUTO_INCREMENT PRIMARY KEY,
    patient_id INT NOT NULL, -- 관리받는 환자의 식별자입니다.
    nurse_id INT NOT NULL, -- 담당 간호사의 내부 ID입니다.
    relationship_start_date DATE, -- 관리 시작 날짜입니다.
    relationship_end_date DATE, -- 관리 종료 날짜입니다.
    FOREIGN KEY (patient_id) REFERENCES PatientRegistrations(no) ON DELETE CASCADE,
    FOREIGN KEY (nurse_id) REFERENCES Nurse(no) ON DELETE CASCADE
);

